class BinarySearch {

    /**
     * Функция бинарного поиска в отсортированном списке
     *
     * @param list отсортированный список
     * @param item искомое число
     * @return искомое число в случае успеха и -1 в случае ошибки
     */
    fun binarySearch(list: List<Int>, item: Int): Int {
        // Границы части списка, в которой выполняется поиск
        var low = 0
        var high = list.size - 1

        // Идём от нижней границы к верхней
        while (low <= high) {
            // Середина списка
            val mid = (low + high)/2
            // Предполагаем, что искомое находится в середине
            val guess = list[mid]

            // Если предположение верно - выводим ответ
            if (guess == item) {
                return mid
            }

            // Если предполагаемое число больше - сдвигаем верхнюю границу
            if (guess > item) {
                high = mid - 1
            }

            // Если предполагаемое число меньше - сдвигаем нижнюю границу
            else {
                low = mid + 1
            }
        }

        // Если решение не нашлось, то выводим -1
        return -1
    }
}

